generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  name             String?
  password         String?
  emailVerified    DateTime?
  image            String?
  socialProvider   String?
  socialProviderId String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt

  Participant    Participant[]

  @@map("users")
}

model Trip {
  id           String   @id @default(uuid())
  destination  String
  starts_at    DateTime
  ends_at      DateTime
  is_confirmed Boolean  @default(false)
  is_concluded Boolean @default(false)
  created_at   DateTime @default(now())

  activities   Activity[]
  links        Link[]
  participants Participant[] @relation(name: "member_on_trip")

  @@map("trips")
}

model Participant {
  id           String  @id @default(uuid())
  is_invited   Boolean @default(false)
  is_confirmed Boolean @default(false)
  is_owner     Boolean @default(false)
  user_id      String
  trip_id      String

  trip   Trip    @relation(fields: [trip_id], references: [id], name: "member_on_trip")
  user   User   @relation(fields: [user_id], references: [id])

  @@unique([trip_id, user_id])
  @@map("participants")
}

model Activity {
  id        String   @id @default(uuid())
  title     String
  occurs_at DateTime
  trip_id   String

  trip Trip @relation(fields: [trip_id], references: [id])

  @@map("activities")
}

model Link {
  id      String @id @default(uuid())
  title   String
  url     String @unique
  trip_id String

  trip Trip @relation(fields: [trip_id], references: [id])

  @@map("links")
}
